# Application configuration
spring:
  application:
    name: ISH-ApplicationRegistrationService
  config:
    import: optional:configserver:http://localhost:8888

  # Data Source configuration
  datasource:
    url: jdbc:mysql://localhost:3306/InsuranceSystemForHealth
    username: root
    password: root

  # JPA configuration
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true

# Server configuration
server:
  port: 7071

# Application specific properties
ar:
  ssa-web:
    url: http://localhost:9090/ssa-web-api/find/{ssn}
  state: california

# Resilience4j configuration
resilience4j:
  circuitbreaker:
    instances:
      ssaWebService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    instances:
      ssaWebService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  bulkhead:
    instances:
      ssaWebService:
        maxConcurrentCalls: 10

# Actuator configuration for monitoring circuit breakers
management:
  endpoints:
    web:
      exposure:
        include: health,info,circuitbreakers,circuitbreakerevents
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    in.lakshay: DEBUG
    org.springframework.web: INFO
    org.springframework.web.reactive.function.client.ExchangeFunctions: DEBUG
    io.github.resilience4j: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
  file:
    name: logs/application-registration.log
    max-size: 10MB
    max-history: 10
